(**************************************************************************)
(*                                BELENIOS                                *)
(*                                                                        *)
(*  Copyright Â© 2012-2016 Inria                                           *)
(*                                                                        *)
(*  This program is free software: you can redistribute it and/or modify  *)
(*  it under the terms of the GNU Affero General Public License as        *)
(*  published by the Free Software Foundation, either version 3 of the    *)
(*  License, or (at your option) any later version, with the additional   *)
(*  exemption that compiling, linking, and/or using OpenSSL is allowed.   *)
(*                                                                        *)
(*  This program is distributed in the hope that it will be useful, but   *)
(*  WITHOUT ANY WARRANTY; without even the implied warranty of            *)
(*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU     *)
(*  Affero General Public License for more details.                       *)
(*                                                                        *)
(*  You should have received a copy of the GNU Affero General Public      *)
(*  License along with this program.  If not, see                         *)
(*  <http://www.gnu.org/licenses/>.                                       *)
(**************************************************************************)

<doc text="Web-specific serializable datatypes">

(** {1 Predefined types} *)

type uuid <ocaml predef from="Serializable_builtin"> = abstract
type string_set <ocaml predef from="Serializable_builtin"> = abstract
type datetime <ocaml predef from="Web_serializable_builtin"> = abstract

(** {1 Web-specific types} *)

type randomness = {
  randomness : string;
}
<doc text="Randomness generated by the server sent to the client.">

type user = {
  domain : string;
  name : string;
} <ocaml field_prefix="user_">

type auth_config = {
  auth_system : string;
  auth_instance : string;
  auth_config : (string * string) list;
}

type metadata = {
  ?owner: user option;
  ?auth_config: auth_config list option;
  ?cred_authority : string option;
  ?trustees : string list option;
} <ocaml field_prefix="e_">

type datadir_item = {
  dir : string;
} <ocaml field_prefix="datadir_">

type datadir_index = datadir_item list

type election_uuid = {
  uuid : uuid;
} <ocaml field_prefix="election_">

type election_dates = {
  finalization : datetime;
} <ocaml field_prefix="e_">
